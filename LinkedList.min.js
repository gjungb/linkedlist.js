// LinkedList.js copyright 2013 Matthew Parke
var ListNode=function(){function d(a,b){this._id="number"===typeof a?a:null;this._data=b||null;this.prev=this.next=null}d.prototype={id:function(a){if(null!==a&&void 0!==a)if("number"===typeof a)this._id=a;else throw Error("Id must be an integer.");else return this._id},data:function(a){if(null!==a&&void 0!==a)this._data=a;else return this._data},hasNext:function(){return null!==this.next?null!==this.next.id():!1},hasPrev:function(){return null!==this.prev?null!==this.prev.id():!1}};return d}(),LinkedList=
function(){function d(){this.start=new ListNode;this.end=new ListNode;this.start.next=this.end;this.start.prev=null;this.end.prev=this.start;this.end.next=null;this._numNodes=this._idCounter=0}d.prototype={insertBefore:function(a,b){var c=new ListNode(this._idCounter,b);c.next=a;c.prev=a.prev;a.prev.next=c;a.prev=c;++this._idCounter;++this._numNodes},addLast:function(a){this.insertBefore(this.end,a)},add:function(a){this.addLast(a)},getFirst:function(){return 0===this._numNodes?null:this.start.next},
getLast:function(){return 0===this._numNodes?null:this.end.prev},size:function(){return this._numNodes},getFromFirst:function(a){var b=0,c=this.start.next;if(0<=a)for(;b<a&&null!==c;)c=c.next,++b;else c=null;if(null===c)throw"Index out of bounds.";return c},get:function(a){var b=null;return b=0===a?this.getFirst():a===this._numNodes-1?this.getLast():this.getFromFirst(a)},remove:function(a){a.prev.next=a.next;a.next.prev=a.prev;--this._numNodes;return a},removeFirst:function(){var a=null;0<this._numNodes&&
(a=this.remove(this.start.next));return a},removeLast:function(){var a=null;0<this._numNodes&&(a=this.remove(this.end.prev));return a},removeAll:function(){this.start.next=this.end;this.end.prev=this.start;this._idCounter=this._numNodes=0},each:function(a){for(var b=this.start;b.hasNext();)b=b.next,a(b)},find:function(a){for(var b=this.start,c=!1,d=null;b.hasNext()&&!c;)b=b.next,a(b)&&(d=b,c=!0);return d},map:function(a){for(var b=this.start,c=[];b.hasNext();)b=b.next,a(b)&&c.push(b);return c},push:function(a){this.addLast(a)},
unshift:function(a){0<this._numNodes?this.insertBefore(this.start.next,a):this.insertBefore(this.end,a)},pop:function(){return this.removeLast()},shift:function(){return this.removeFirst()}};return d}();
