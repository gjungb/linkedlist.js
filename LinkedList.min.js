// linkedlist.js v1.0.0 Copyright Matthew Parke 2013
var ListNode=function(){function t(t,e){this._id=t||null;this._data=e||null;this.next=null;this.prev=null}t.prototype={id:function(t){if(t){if(typeof t==="number"){this._id=t}else{throw new Error("Id must be an integer.")}}else{return this._id}},data:function(t){if(t){this._data=t}else{return this._data}},hasNext:function(){if(this.next!==null){return this.next.id()!==null}return false},hasPrev:function(){if(this.prev!==null){return this.prev.id()!==null}return false}};return t}();var LinkedList=function(){function t(){this.start=new ListNode;this.end=new ListNode;this.start.next=this.end;this.start.prev=null;this.end.prev=this.start;this.end.next=null;this._idCounter=0;this._numNodes=0}t.prototype={addLast:function(t){var e=new ListNode(this._idCounter,t);last=this.end;this.insertBefore(last,e);++this._idCounter;++this._numNodes},insertBefore:function(t,e){e.next=t;e.prev=t.prev;t.prev.next=e;t.prev=e},getFirst:function(){if(this._numNodes===0){return null}else{return this.start.next}},getLast:function(){if(this._numNodes===0){return null}else{return this.end.prev}},getFromFirst:function(t){var e=0,n=this.start.next;if(t>=0){while(e<t&&n!==null){n=n.next;++e}}else{n=null}if(n===null){throw"Index out of bounds."}return n},get:function(t){var e=0,n=null;if(t===0){n=this.getFirst()}else if(t===this._numNodes-1){n=this.getLast()}else{n=this.getFromFirst(t)}return n},insert:function(t,e){var n=this.get(t),i=new ListNode(this._idCounter,e);this.insertBefore(n,i)},size:function(){return this._numNodes},remove:function(t){t.prev.next=t.next;t.next.prev=t.prev;--this._numNodes;return t},removeFirst:function(){var t=null;if(this._numNodes>0){t=this.remove(this.start.next)}return t},removeLast:function(){var t=null;if(this._numNodes>0){t=this.remove(this.end.prev)}return t},removeAll:function(){this.start.next=this.end;this.end.prev=this.start;this._numNodes=0},each:function(t){var e=this.getFirst();if(e){t(e);while(e.hasNext()){e=e.next;t(e)}}},add:function(t){this.addLast(t)},push:function(t){this.addLast(t)},unshift:function(t){this.insertBefore(t,this.getFirst())},pop:function(){return this.removeLast()},shift:function(){return this.removeFirst()}};return t}();
